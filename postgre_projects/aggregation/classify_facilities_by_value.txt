SELECT name,
  CASE NTILE(3) OVER (ORDER BY total_revenue DESC)
    WHEN 1 THEN 'high'
    WHEN 2 THEN 'average'
    ELSE 'low'
  END AS revenue
FROM (
  SELECT f.name, 
         COALESCE(SUM(
           CASE 
             WHEN b.memid = 0 THEN b.slots * f.guestcost
             ELSE b.slots * f.membercost
           END
         ), 0) AS total_revenue
  FROM cd.facilities f
  LEFT JOIN cd.bookings b ON f.facid = b.facid
  GROUP BY f.name
) AS revenues
ORDER BY 
  NTILE(3) OVER (ORDER BY total_revenue DESC),
  name;
